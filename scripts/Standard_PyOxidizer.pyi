def abs_i32(x: int) -> int:
    ...
def abs_i64(x: int) -> int:
    ...
def abs_i128(x: int) -> int:
    ...
def abs_f32(x: float) -> float:
    ...
def abs_f64(x: float) -> float:
    ...
def abs_complex(real_number:float,imag_number:float) -> float:
    ...
def ascii(x: str) -> str:
    ...
def bin(x: int,param:bool) -> str:
    ...

class ByteArray:
    data: bytes
    def __new__(cls) -> ByteArray: ...
    def __init__(self, py_data: object) -> None: ...
    def to_bytes(self) -> bytes: ...
    def to_bytearray(self) -> bytearray: ...
    def __repr__(&self) -> str: ...
    def __str__(self_: PyRef<'_, Self>) -> str: ...
    def __len__(self) -> int: ...
    def __getitem__(self, idx: int) -> int: ...
    def __add__(self, other: ByteArray) -> ByteArray: ...
    def append(self, other: ByteArray) -> None: ...
    def slice(self, start: int | None = None, end: int | None = None, step: int | None = None) -> ByteArray: ...
